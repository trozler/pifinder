{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CalculateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/pifinder-dev-calculate"
      }
    },
    "WorkerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/pifinder-dev-worker"
      }
    },
    "HellotestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/pifinder-dev-hellotest"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "pifinder",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pifinder-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pifinder-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "pifinder",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-b9ebb25c-6bfc-4684-9d6c-0d7f2358f62d"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CalculateLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "WorkerLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "HellotestLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CalculateLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/pifinder/dev/1616353228505-2021-03-21T19:00:28.505Z/pifinder.zip"
        },
        "Handler": "s_calculate.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "pifinder-dev-calculate",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "workerLamda": {
              "Ref": "WorkerLambdaFunction"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CalculateLogGroup"
      ]
    },
    "WorkerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/pifinder/dev/1616353228505-2021-03-21T19:00:28.505Z/pifinder.zip"
        },
        "Handler": "s_worker.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "pifinder-dev-worker",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WorkerLogGroup"
      ]
    },
    "HellotestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/pifinder/dev/1616353228505-2021-03-21T19:00:28.505Z/pifinder.zip"
        },
        "Handler": "s_hellotest.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "pifinder-dev-hellotest",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "HellotestLogGroup"
      ]
    },
    "CalculateLambdaVersionnYw7rzN40UfuQIJoFfFSVCHFWk2hOnGtf4qvrDeVk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CalculateLambdaFunction"
        },
        "CodeSha256": "+oKEXTNA73xClR7klCV/tJk4TtW+bQ6Chust+EYrPwk="
      }
    },
    "WorkerLambdaVersion4iprMJbDleOfyBAF7gWFT9H13rZipePMpFEMoQPg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WorkerLambdaFunction"
        },
        "CodeSha256": "+oKEXTNA73xClR7klCV/tJk4TtW+bQ6Chust+EYrPwk="
      }
    },
    "HellotestLambdaVersionUvVKLoyL8lb5AcqxjPAz3RJvcyACRaYfsUR5LDPWxk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HellotestLambdaFunction"
        },
        "CodeSha256": "+oKEXTNA73xClR7klCV/tJk4TtW+bQ6Chust+EYrPwk="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-pifinder",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/http-api/pifinder-dev"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        },
        "AccessLogSettings": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "HttpApiLogGroup",
              "Arn"
            ]
          },
          "Format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourcePath\":\"$context.routeKey\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"stage\":\"$context.stage\",\"status\":\"$context.status\",\"integrationStatus\":\"$context.integrationStatus\",\"integrationLatency\":\"$context.integrationLatency\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_HTTP_API_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "DependsOn": "HttpApiLogGroup"
    },
    "CalculateLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CalculateLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCalculate": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CalculateLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostCalculate": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /calculate",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCalculate"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCalculate"
    },
    "WorkerLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WorkerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationWorker": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "WorkerLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostWorker": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /worker",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationWorker"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationWorker"
    },
    "HellotestLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HellotestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationHellotest": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "HellotestLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetHellotest": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /hellotest",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationHellotest"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationHellotest"
    },
    "CloudWatchLogsSubscriptionFilterCalculateLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:b9ebb25c-6bfc-4684-9d6c-0d7f2358f62d#hJDN4hCtbVY5vLwx7c#pifinder#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CalculateLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterWorkerLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:b9ebb25c-6bfc-4684-9d6c-0d7f2358f62d#hJDN4hCtbVY5vLwx7c#pifinder#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "WorkerLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterHellotestLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:b9ebb25c-6bfc-4684-9d6c-0d7f2358f62d#hJDN4hCtbVY5vLwx7c#pifinder#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "HellotestLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterHttpApiLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:b9ebb25c-6bfc-4684-9d6c-0d7f2358f62d#hJDN4hCtbVY5vLwx7c#pifinder#dev",
        "FilterPattern": "\"SLS_HTTP_API_LOG\"",
        "LogGroupName": {
          "Ref": "HttpApiLogGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      }
    },
    "CalculateLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CalculateLambdaVersionnYw7rzN40UfuQIJoFfFSVCHFWk2hOnGtf4qvrDeVk"
      }
    },
    "WorkerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WorkerLambdaVersion4iprMJbDleOfyBAF7gWFT9H13rZipePMpFEMoQPg"
      }
    },
    "HellotestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HellotestLambdaVersionUvVKLoyL8lb5AcqxjPAz3RJvcyACRaYfsUR5LDPWxk"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      }
    }
  }
}